for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table[[1]][,1:2])
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
results
data <- as.data.frame(matrix(ncol=2))
cols <-c('topic',"desc")
colnames(data) <-c(cols)
df <- read.csv("D:/Ongair/tal/Wikipedia/actresses.csv")
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
View(dict)
colnames(dict) <- c("topic","desc")
dict <- as.data.frame(table[[1]])
dict <- as.data.frame(table[,1:2])
webpage <- read_html("https://en.wikipedia.org/wiki/Brooke_Adams_(actress)")
results <- webpage %>% html_nodes("table.vcard")
results
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=T)
dict <- as.data.frame(table[[i]][,1:2])
webpage <- read_html("https://en.wikipedia.org/wiki/Brooke_Adams_(actress)")
results <- webpage %>% html_nodes("table.vcard")
results
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=T)
dict <- as.data.frame(table)
View(dict)
webpage <- read_html("https://en.wikipedia.org/wiki/Brooke_Adams_(actress)")
results <- webpage %>% html_nodes("table.vcard")
results
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
dict <- as.data.frame(table)
View(dict)
row[[i]]
row
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
results
webpage
results <- webpage %>% html_nodes("table.vcard")
results
row
webpage <- read_html("https://en.wikipedia.org/wiki/Mariann_Aalda")
results <- webpage %>% html_nodes("table.vcard")
results
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
results
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=T)
dict <- as.data.frame(table)
accounts_df <- table[[1]][1:6,-1]
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
results
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=T)
dict <- as.data.frame(table)
webpage <- read_html("https://en.wikipedia.org/wiki/Brooke_Adams_(actress)")
results <- webpage %>% html_nodes("table.vcard")
results
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=T)
dict <- as.data.frame(table[[i]][,1:2])
webpage <- read_html("https://en.wikipedia.org/wiki/Brooke_Adams_(actress)")
results <- webpage %>% html_nodes("table.vcard")
results
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=T)
dict <- as.data.frame(table)
View(dict)
row
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
row
results <- webpage %>% html_nodes("table.vcard")
results
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if (results=={xml_nodeset (0)})
next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
results <- webpage %>% html_nodes("table.vcard")
results
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if (results==xml_nodeset (0))
next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if (results=="{xml_nodeset (0)}")
next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
View(data)
results <- webpage %>% html_nodes("table.vcard")
results
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- as.data.frame(webpage %>% html_nodes("table.vcard"))
rbind(data,results)
}
bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
library(dplyr)
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
rbind(data,results)
}
data <- as.data.frame(matrix(ncol=2))
cols <-c('topic',"desc")
colnames(data) <-c(cols)
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if (results=="{xml_nodeset (0)}")
next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
data <- as.data.frame(matrix(ncol=2))
cols <-c('topic',"desc")
colnames(data) <-c(cols)
df <- read.csv("D:/Ongair/tal/Wikipedia/actresses.csv")
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if (results=="{xml_nodeset (0)}")
next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
a <- bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
View(a)
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if (results=="")
next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if(!is.null(results))
next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
data <- as.data.frame(matrix(ncol=2))
cols <-c('topic',"desc")
colnames(data) <-c(cols)
df <- read.csv("D:/Ongair/tal/Wikipedia/actresses.csv")
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if(is.null(results))
next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if(!is.null(results)){
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
}
print(i)
}
results
a <- bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
View(a)
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if (is.null(results))
next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
if (!is.null(results)){
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
}
print(i)
}
webpage <- read_html("https://en.wikipedia.org/wiki/Brooke_Adams_(actress)")
results <- webpage %>% html_nodes("table.vcard")
bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
a <- bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
View(a)
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
a <- bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
if(!is.data.frame(a) || !nrow(a)) next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
View(data)
View(data)
data <- as.data.frame(matrix(ncol=2))
cols <-c('topic',"desc")
colnames(data) <-c(cols)
df <- read.csv("D:/Ongair/tal/Wikipedia/actresses.csv")
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
a <- bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
if(!is.data.frame(a) || !nrow(a)) next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
webpage <- read_html("https://en.wikipedia.org/wiki/Candice_Accola")
results <- webpage %>% html_nodes("table.vcard")
results
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
dict <- as.data.frame(table)
View(dict)
View(dict)
data <- as.data.frame(matrix(ncol=2))
cols <-c('topic',"desc")
colnames(data) <-c(cols)
df <- read.csv("D:/Ongair/tal/Wikipedia/actresses.csv")
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html("https://en.wikipedia.org/wiki/Candice_Accola")
results <- webpage %>% html_nodes("table.vcard")
a <- bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
if(!is.data.frame(a) || !nrow(a)) next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
View(data)
for(i in 1:nrow(df)) {
row <- as.character(df[i,])
webpage <- read_html(row)
results <- webpage %>% html_nodes("table.vcard")
a <- bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
if(!is.data.frame(a) || !nrow(a)) next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
colnames(dict) <- c("topic","desc")
data <- rbind(dict,data)
print(i)
}
data <- as.data.frame(matrix(ncol=2))
cols <-c('topic',"desc")
colnames(data) <-c(cols)
df <- read.csv("D:/Ongair/tal/Wikipedia/actresses.csv")
rm(list=ls())
library(rvest)
library(RCurl)
library(XML)
library(magrittr)
library(dplyr)
url<-"https://en.wikipedia.org/wiki/List_of_American_film_actresses"
url2<-getURL(url)
parsed<-htmlParse(url2)
links<-xpathSApply(parsed,path = "//a",xmlGetAttr,"href")
df <- as.data.frame(matrix(unlist(links), nrow=2011, byrow=T),stringsAsFactors=FALSE)
string <- as.character(df$V1)
df <- as.data.frame(paste0("https://en.wikipedia.org", string))
colnames(df) <- "list"
data <- as.data.frame(matrix(ncol=1))
cols <-c('topic')
colnames(data) <-c(cols)
df <- read.csv("D:/Ongair/tal/Wikipedia/actresses.csv")
for(i in 1:nrow(df)){
tryCatch({
row <- as.character(df[i,])
webpage <- read_html(row)
on.exit(close(webpage))
results <- webpage %>% html_nodes("table.vcard") %>% html_table(trim = TRUE) %>% ifelse(. == "", NA, .)
if (is.logical(results) && length(results) == 0) next
#  a <- bind_rows(lapply(xml_attrs(results), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
#
# if(!is.data.frame(a) || !nrow(a)) next
table <- webpage %>%
html_nodes("table.vcard") %>%
html_table(header=F)
table <- table[[1]]
# You can clean up the table with the following code, or something like it.
# table[[1]]
dict <- as.data.frame(table)
dict[1, 1] <- NA
colnames(dict) <- c("topic",dict[1,2])
data <- merge(data, dict, by="topic", all = T)
print(row)
}, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}
